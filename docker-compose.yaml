version: "3.9"

services:
    
  frontend:
    build: ./frontend
    container_name: web-server
    hostname: web-server
    volumes:
      - ./frontend:/app
    restart: unless-stopped
    networks:
      - back-tier
      
  backend:
    env_file:
      - .env/.base.dev
    build: ./backend
    volumes:
      - ./backend:/app
    depends_on:
      - mysql
      - mongodb
    restart: unless-stopped
    scale: 3
    networks:
      - back-tier

  mysql: # 유저 정보 등
    image: mysql:latest
    container_name: mysql
    env_file:
      - .env/.mysql.dev
    volumes:
      - ./database/mysql_data:/var/lib/mysql
    restart: unless-stopped
    networks:
      - back-tier

  mongodb: # 게시물 정보 등
    image: mongo:latest
    container_name: mongodb
    env_file:
      - .env/.mongodb.dev
    volumes:
      - ./database/mongodb_data:/data/db
    restart: unless-stopped
    networks:
      - back-tier

  api-gateway:
    image: nginx:latest
    container_name: api-gateway
    volumes:
      - ./gateway:/etc/nginx/
      - ./certbot/data/letsencrypt:/etc/letsencrypt:rw
      - ./certbot/data/webroot:/var/www/html:rw
    ports:
      - "80:80"
      - "443:443"
      - "9090:9090" # for test while developing
    depends_on:
      - frontend
      - backend
    restart: unless-stopped
    networks:
      - front-tier
      - back-tier

  certbot:
    env_file:
      - .env/.certbot.env
    build: ./certbot
    volumes:
      - ./certbot/data/letsencrypt:/etc/letsencrypt:rw
      - ./certbot/data/webroot:/var/www/html:rw
      - ./certbot/data/logs:/var/log/letsencrypt
    depends_on:
      - api-gateway
    networks:
      - front-tier

networks:
  front-tier:
  back-tier:
    internal: true